#pragma checksum "D:\Capgemini\Practice\Practice_Code_For_KT\CodePage\KendoUIAppNew\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "101063dbba2c32a0d7ac95390358a3bd2884ca39"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Capgemini\Practice\Practice_Code_For_KT\CodePage\KendoUIAppNew\Views\_ViewImports.cshtml"
using KendoUIAppNew;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Capgemini\Practice\Practice_Code_For_KT\CodePage\KendoUIAppNew\Views\_ViewImports.cshtml"
using KendoUIAppNew.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"101063dbba2c32a0d7ac95390358a3bd2884ca39", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7b47d2ee6411a48095c48c77b11d34051d517806", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Capgemini\Practice\Practice_Code_For_KT\CodePage\KendoUIAppNew\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
        <div class=""display-4"">Kendo UI Example</div>
    </div>

    <div class=""col-md-12"">
        <p>Kendo version <strong id=""kendoVersion""></strong></p>

        <input id=""comboEmp"" />

        <div id=""grid1""></div>

        <div id=""example"">
            <div id=""grid""></div>
            <script>
                $(document).ready(function () {
                    var crudServiceBaseUrl = ""https://demos.telerik.com/kendo-ui/service"",
                        dataSource = new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: crudServiceBaseUrl + ""/detailproducts"",
                                    dataType: ""jsonp""
                                },
                                update: {
                                    url: crudServiceBaseUrl + ""/detailproducts/Update"",
                                    dataType: ""jsonp""
                         ");
            WriteLiteral(@"       },
                                destroy: {
                                    url: crudServiceBaseUrl + ""/detailproducts/Destroy"",
                                    dataType: ""jsonp""
                                },
                                parameterMap: function (options, operation) {
                                    if (operation !== ""read"" && options.models) {
                                        return { models: kendo.stringify(options.models) };
                                    }
                                }
                            },
                            batch: true,
                            pageSize: 20,
                            autoSync: true,
                            aggregate: [{
                                field: ""TotalSales"",
                                aggregate: ""sum""
                            }],
                            group: {
                                field: ""Category.CategoryName"",
              ");
            WriteLiteral(@"                  dir: ""desc"",
                                aggregates: [
                                    { field: ""TotalSales"", aggregate: ""sum"" }
                                ]
                            },
                            schema: {
                                model: {
                                    id: ""ProductID"",
                                    fields: {
                                        ProductID: { editable: false, nullable: true },
                                        Discontinued: { type: ""boolean"", editable: false },
                                        TotalSales: { type: ""number"", editable: false },
                                        TargetSales: { type: ""number"", editable: false },
                                        LastSupply: { type: ""date"" },
                                        UnitPrice: { type: ""number"" },
                                        UnitsInStock: { type: ""number"" },
                                    ");
            WriteLiteral(@"    Category: {
                                            defaultValue: {
                                                CategoryID: 8,
                                                CategoryName: ""Seafood""
                                            }
                                        },
                                        Country: {
                                            defaultValue: {
                                                CountryNameLong: ""Bulgaria"",
                                                CountryNameShort: ""bg""
                                            }
                                        }
                                    }
                                }
                            }
                        });

                    $(""#grid"").kendoGrid({
                        dataSource: dataSource,
                        columnMenu: {
                            filterable: false
                        },
                      ");
            WriteLiteral(@"  height: 680,
                        editable: ""incell"",
                        pageable: true,
                        sortable: true,
                        navigatable: true,
                        resizable: true,
                        reorderable: true,
                        groupable: true,
                        filterable: true,
                        dataBound: onDataBound,
                        toolbar: [""excel"", ""pdf"", ""search""],
                        columns: [{
                            selectable: true,
                            width: 75,
                            attributes: {
                                ""class"": ""checkbox-align"",
                            },
                            headerAttributes: {
                                ""class"": ""checkbox-align"",
                            }
                        }, {
                            field: ""ProductName"",
                            title: ""Product Name"",
                       ");
            WriteLiteral(@"     template: ""<div class='product-photo' style='background-image: url(../content/web/foods/#:data.ProductID#.jpg);'></div><div class='product-name'>#: ProductName #</div>"",
                            width: 300
                        }, {
                            field: ""UnitPrice"",
                            title: ""Price"",
                            format: ""{0:c}"",
                            width: 105
                        }, {
                            field: ""Discontinued"",
                            title: ""In Stock"",
                            template: ""<span id='badge_#=ProductID#' class='badgeTemplate'></span>"",
                            width: 130,
                        }, {
                            field: ""Category.CategoryName"",
                            title: ""Category"",
                            editor: clientCategoryEditor,
                            groupHeaderTemplate: ""Category: #=data.value#, Total Sales: #=kendo.format('{0:c}', aggregates.Tota");
            WriteLiteral(@"lSales.sum)#"",
                            width: 125
                        }, {
                            field: ""CustomerRating"",
                            title: ""Rating"",
                            template: ""<input id='rating_#=ProductID#' data-bind='value: CustomerRating' class='rating'/>"",
                            editable: returnFalse,
                            width: 200
                        }, {
                            field: ""Country.CountryNameLong"",
                            title: ""Country"",
                            template: ""<div class='k-text-center'><img src='../content/web/country-flags/#:data.Country.CountryNameShort#.png' alt='Kendo UI for jQuery Grid #: data.Country.CountryNameLong# Flag' title='#: data.Country.CountryNameLong#' width='30' /></div>"",
                            editor: clientCountryEditor,
                            width: 120
                        }, {
                            field: ""UnitsInStock"",
                         ");
            WriteLiteral(@"   title: ""Units"",
                            width: 105
                        }, {
                            field: ""TotalSales"",
                            title: ""Total Sales"",
                            format: ""{0:c}"",
                            width: 140,
                            aggregates: [""sum""],
                        }, {
                            field: ""TargetSales"",
                            title: ""Target Sales"",
                            format: ""{0:c}"",
                            template: ""<span id='chart_#= ProductID#' class='sparkline-chart'></span>"",
                            width: 220
                        },
                        { command: ""destroy"", title: ""&nbsp;"", width: 120 }],
                    });
                });

                function onDataBound(e) {
                    var grid = this;
                    grid.table.find(""tr"").each(function () {
                        var dataItem = grid.dataItem(this);
             ");
            WriteLiteral(@"           var themeColor = dataItem.Discontinued ? 'success' : 'error';
                        var text = dataItem.Discontinued ? 'available' : 'not available';

                        $(this).find("".badgeTemplate"").kendoBadge({
                            themeColor: themeColor,
                            text: text,
                        });

                        $(this).find("".rating"").kendoRating({
                            min: 1,
                            max: 5,
                            label: false,
                            selection: ""continuous""
                        });

                        $(this).find("".sparkline-chart"").kendoSparkline({
                            legend: {
                                visible: false
                            },
                            data: [dataItem.TargetSales],
                            type: ""bar"",
                            chartArea: {
                                margin: 0,
                  ");
            WriteLiteral(@"              width: 180,
                                background: ""transparent""
                            },
                            seriesDefaults: {
                                labels: {
                                    visible: true,
                                    format: '{0}%',
                                    background: 'none'
                                }
                            },
                            categoryAxis: {
                                majorGridLines: {
                                    visible: false
                                },
                                majorTicks: {
                                    visible: false
                                }
                            },
                            valueAxis: {
                                type: ""numeric"",
                                min: 0,
                                max: 130,
                                visible: false,
             ");
            WriteLiteral(@"                   labels: {
                                    visible: false
                                },
                                minorTicks: { visible: false },
                                majorGridLines: { visible: false }
                            },
                            tooltip: {
                                visible: false
                            }
                        });

                        kendo.bind($(this), dataItem);
                    });
                }

                function returnFalse() {
                    return false;
                }

                function clientCategoryEditor(container, options) {
                    $('<input required name=""Category"">')
                        .appendTo(container)
                        .kendoDropDownList({
                            autoBind: false,
                            dataTextField: ""CategoryName"",
                            dataValueField: ""CategoryID"",
      ");
            WriteLiteral(@"                      dataSource: {
                                data: categories
                            }
                        });
                }

                function clientCountryEditor(container, options) {
                    $('<input required name=""Country"">')
                        .appendTo(container)
                        .kendoDropDownList({
                            dataTextField: ""CountryNameLong"",
                            dataValueField: ""CountryNameShort"",
                            template: ""<div class='dropdown-country-wrap'><img src='../content/web/country-flags/#:CountryNameShort#.png' alt='Kendo UI for jQuery Grid #: CountryNameLong# Flag' title='#: CountryNameLong#' width='30' /><span>#:CountryNameLong #</span></div>"",
                            dataSource: {
                                transport: {
                                    read: {
                                        url: "" https://demos.telerik.com/kendo-ui/service/countries");
            WriteLiteral(@""",
                                        dataType: ""jsonp""
                                    }
                                }
                            },
                            autoWidth: true
                        });
                }

                var categories = [{
                    ""CategoryID"": 1,
                    ""CategoryName"": ""Beverages""
                }, {
                    ""CategoryID"": 2,
                    ""CategoryName"": ""Condiments""
                }, {
                    ""CategoryID"": 3,
                    ""CategoryName"": ""Confections""
                }, {
                    ""CategoryID"": 4,
                    ""CategoryName"": ""Dairy Products""
                }, {
                    ""CategoryID"": 5,
                    ""CategoryName"": ""Grains/Cereals""
                }, {
                    ""CategoryID"": 6,
                    ""CategoryName"": ""Meat/Poultry""
                }, {
                    ""CategoryID"": 7,
               ");
            WriteLiteral(@"     ""CategoryName"": ""Produce""
                }, {
                    ""CategoryID"": 8,
                    ""CategoryName"": ""Seafood""
                }];
            </script>

            <style type=""text/css"">
                .customer-photo {
                    display: inline-block;
                    width: 32px;
                    height: 32px;
                    border-radius: 50%;
                    background-size: 32px 35px;
                    background-position: center center;
                    vertical-align: middle;
                    line-height: 32px;
                    box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
                    margin-left: 5px;
                }

                .customer-name {
                    display: inline-block;
                    vertical-align: middle;
                    line-height: 32px;
                    padding-left: 3px;
                }

                .k-grid tr .checkbox-align {
        ");
            WriteLiteral(@"            text-align: center;
                    vertical-align: middle;
                }

                .product-photo {
                    display: inline-block;
                    width: 32px;
                    height: 32px;
                    border-radius: 50%;
                    background-size: 32px 35px;
                    background-position: center center;
                    vertical-align: middle;
                    line-height: 32px;
                    box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
                    margin-right: 5px;
                }

                .product-name {
                    display: inline-block;
                    vertical-align: middle;
                    line-height: 32px;
                    padding-left: 3px;
                }

                .k-rating-container .k-rating-item {
                    padding: 4px 0;
                }

                    .k-rating-container .k-rating-item .k-icon {
");
            WriteLiteral(@"                        font-size: 16px;
                    }

                .dropdown-country-wrap {
                    display: flex;
                    flex-wrap: nowrap;
                    align-items: center;
                    white-space: nowrap;
                }

                    .dropdown-country-wrap img {
                        margin-right: 10px;
                    }

                #grid .k-grid-edit-row > td > .k-rating {
                    margin-left: 0;
                    width: 100%;
                }
            </style>
        </div>
    </div>

    <script type=""text/javascript"">
        $(document).ready(function () {
            $(""#kendoVersion"").text(kendo.version);

            $(""#comboEmp"").kendoComboBox({
                dataSource: [{ EmployeeId: 1, EmployeeName: ""Ash1"" },
                { EmployeeId: 2, EmployeeName: ""Ash2"" }],
                placeHolder: ""Select"",
                dataTextField: ""EmployeeName"",
                da");
            WriteLiteral(@"taValueField: ""EmployeeId"",
                index: 0,
                suggest: true,
                filter: ""contains""
            });

            $(""grid1"").kendoGrid({
                dataSource: [{ CustomerID: ""1"", ContactName: ""Ash1"", CompanyName: ""ABC 1 Company"", Country: ""IND"" },
                    { CustomerID: ""2"", ContactName: ""Ash2"", CompanyName: ""ABC 2 Company"", Country: ""UK"" },
                    { CustomerID: ""3"", ContactName: ""Ash3"", CompanyName: ""ABC 3 Company"", Country: ""USA"" },
                    { CustomerID: ""4"", ContactName: ""Ash4"", CompanyName: ""ABC 4 Company"", Country: ""Japan"" },
                    { CustomerID: ""5"", ContactName: ""Ash5"", CompanyName: ""ABC 5 Company"", Country: ""Korea"" }
                ],
                filterable: true,
                sortable:true,
                columns: CustomerHelper.GenerateColumns(),
                editable: false,
                navigatable: true,
                selectable:""row""
            });
        });

      ");
            WriteLiteral(@"  var CustomerHelper = {
            GenerateColumns: function () {
                return columns = [
                    { field: ""CustomerID"", title: ""ID"", width: 260, editable: false },
                    { field: ""ContactName"", title: ""Name"", width: 260, editable: false },
                    { field: ""CompanyName"", title: ""Company"", width: 260, editable: false },
                    { field: ""Country"", title: ""Country"", width: 260, editable: false },

                ]
            }
        }
    </script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
